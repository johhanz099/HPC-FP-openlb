/*  This file is part of the OpenLB library
 *
 *  Copyright (C) 2021-24 Adrian Kummerlaender, Shota Ito
 *  E-mail contact: info@openlb.net
 *  The most recent release of OpenLB can be downloaded at
 *  <http://www.openlb.net/>
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public
 *  License along with this program; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA  02110-1301, USA.
*/

/*  ========================================================
 *  ==  WARNING: This is an automatically generated file, ==
 *  ==                  do not modify.                    ==
 *  ========================================================
 */

#pragma once


namespace olb {

namespace dynamics {

template <typename T, typename... FIELDS>
struct CSE<CombinedRLBdynamics<T, descriptors::D3Q19<FIELDS...>, dynamics::Tuple<T, descriptors::D3Q19<FIELDS...>, momenta::Tuple<momenta::BulkDensity, momenta::BulkMomentum, momenta::BulkStress, momenta::DefineToNEq>, equilibria::SecondOrder, collision::BGK, dynamics::DefaultCombination>, momenta::Tuple<momenta::InnerCornerDensity3D<-1, -1, -1>, momenta::FixedVelocityMomentumGeneric, momenta::InnerCornerStress3D<-1, -1, -1>, momenta::DefineSeparately> >> {
template <concepts::Cell CELL, concepts::Parameters PARAMETERS, concepts::BaseType V=typename CELL::value_t>
CellStatistic<V> collide(CELL& cell, PARAMETERS& parameters) any_platform {
auto x19 = cell.template getFieldComponent<momenta::FixedVelocityMomentumGeneric::VELOCITY>(0);
auto x20 = cell.template getFieldComponent<momenta::FixedVelocityMomentumGeneric::VELOCITY>(1);
auto x21 = cell.template getFieldComponent<momenta::FixedVelocityMomentumGeneric::VELOCITY>(2);
auto x22 = parameters.template get<descriptors::OMEGA>();
auto x23 = x22 + V{-1};
auto x24 = V{1} / (x19 + V{-1});
auto x25 = V{0.166666666666667}*cell[17];
auto x26 = V{0.166666666666667}*cell[18];
auto x27 = V{0.166666666666667}*cell[8];
auto x28 = V{0.166666666666667}*cell[9];
auto x29 = V{0.166666666666667}*cell[0];
auto x30 = V{0.166666666666667}*cell[12] + V{0.166666666666667}*cell[3] + V{0.333333333333333}*cell[4] + x29 + V{0.166666666666667};
auto x31 = V{0.166666666666667}*cell[11] + V{0.166666666666667}*cell[2] + V{0.333333333333333}*cell[6];
auto x32 = V{1} / (x20 + V{-1});
auto x33 = V{0.166666666666667}*cell[10] + V{0.166666666666667}*cell[1] + V{0.333333333333333}*cell[8];
auto x34 = V{1} / (x21 + V{-1});
auto x35 = cell[0] + cell[12] + cell[3] + V{2}*cell[4] + V{1};
auto x36 = cell[11] + cell[2] + V{2}*cell[6];
auto x37 = cell[17] + cell[18] + V{2}*cell[1] + V{2}*cell[5] + V{2}*cell[7] + cell[8] + cell[9] + x35 + x36;
auto x38 = cell[10] + cell[1] + V{2}*cell[8];
auto x39 = V{2}*cell[14] + cell[15] + cell[16] + V{2}*cell[2] + cell[6] + cell[7] + V{2}*cell[9] + x35 + x38;
auto x40 = cell[0] + cell[13] + cell[14] + V{2}*cell[16] + V{2}*cell[18] + V{2}*cell[3] + cell[4] + cell[5] + x36 + x38 + V{1};
auto x41 = V{0.166666666666667}*x24*x37 + V{0.166666666666667}*x32*x39 + V{0.166666666666667}*x34*x40;
auto x42 = x19*x19;
auto x43 = x20*x20;
auto x44 = x21*x21;
auto x45 = V{1.5}*x44;
auto x46 = V{1.5}*x42;
auto x47 = V{1.5}*x43;
auto x48 = x46 + x47 + V{-1};
auto x49 = x45 + x48;
auto x50 = x49*(V{0.111111111111111}*x24*x37 + V{0.111111111111111}*x32*x39 + V{0.111111111111111}*x34*x40);
auto x51 = V{1.11022302462516e-16}*cell[3];
auto x52 = V{0.00925925925925926}*x24*x37 + V{0.00925925925925926}*x32*x39 + V{0.00925925925925926}*x34*x40;
auto x53 = V{3}*x21;
auto x54 = x20 + x21;
auto x55 = V{4.5}*(x54*x54);
auto x56 = V{3}*x20;
auto x57 = x49 + x56;
auto x58 = x53 - x55 + x57;
auto x59 = x52*x58;
auto x60 = -x45;
auto x61 = V{1} - x46;
auto x62 = x60 + x61;
auto x63 = x56 + x62;
auto x64 = -x47;
auto x65 = x53 + x64;
auto x66 = x55 + x63 + x65;
auto x67 = -x52*x66;
auto x68 = -x56;
auto x69 = -x21;
auto x70 = x20 + x69;
auto x71 = -V{4.5}*x70*x70;
auto x72 = x49 + x53;
auto x73 = x68 + x71 + x72;
auto x74 = x52*x73;
auto x75 = V{5.55111512312578e-17}*x24*x37 + V{5.55111512312578e-17}*x32*x39 + V{5.55111512312578e-17}*x34*x40;
auto x76 = -x70;
auto x77 = -x53;
auto x78 = x57 + x77;
auto x79 = x78 - V{4.5}*x76*x76;
auto x80 = V{0.0185185185185185}*x24*x37 + V{0.0185185185185185}*x32*x39 + V{0.0185185185185185}*x34*x40;
auto x81 = x19 - x20;
auto x82 = -x81;
auto x83 = V{3}*x19;
auto x84 = x49 + x83;
auto x85 = x68 + x84;
auto x86 = x85 - V{4.5}*x82*x82;
auto x87 = x19 + x69;
auto x88 = -x87;
auto x89 = x77 + x84;
auto x90 = x89 - V{4.5}*x88*x88;
auto x91 = V{0.037037037037037}*x24*x37 + V{0.037037037037037}*x32*x39 + V{0.037037037037037}*x34*x40;
auto x92 = V{3}*x42;
auto x93 = x45 + V{-1};
auto x94 = x47 + x83 - x92 + x93;
auto x95 = V{3.70074341541719e-17}*x24*x37 + V{3.70074341541719e-17}*x32*x39 + V{3.70074341541719e-17}*x34*x40;
auto x96 = V{7.40148683083438e-17}*x24*x37 + V{7.40148683083438e-17}*x32*x39 + V{7.40148683083438e-17}*x34*x40;
auto x97 = V{3}*x43;
auto x98 = x46 + x56 + x93 - x97;
auto x99 = x80*x98;
auto x100 = x63 + x97;
auto x101 = -x100*x80;
auto x102 = V{5.55111512312578e-17}*cell[0];
auto x103 = V{1.11022302462516e-16}*cell[4];
auto x104 = V{5.55111512312578e-17}*cell[12] + V{5.55111512312578e-17}*cell[3] + x102 + x103 + V{5.55111512312578e-17};
auto x105 = V{5.55111512312578e-17}*cell[11] + V{5.55111512312578e-17}*cell[2] + V{1.11022302462516e-16}*cell[6];
auto x106 = x24*(V{5.55111512312578e-17}*cell[17] + V{5.55111512312578e-17}*cell[18] + V{1.11022302462516e-16}*cell[1] + V{1.11022302462516e-16}*cell[5] + V{1.11022302462516e-16}*cell[7] + V{5.55111512312578e-17}*cell[8] + V{5.55111512312578e-17}*cell[9] + x104 + x105);
auto x107 = V{1.11022302462516e-16}*cell[2];
auto x108 = V{5.55111512312578e-17}*cell[10] + V{5.55111512312578e-17}*cell[1] + V{1.11022302462516e-16}*cell[8];
auto x109 = x32*(V{1.11022302462516e-16}*cell[14] + V{5.55111512312578e-17}*cell[15] + V{5.55111512312578e-17}*cell[16] + V{5.55111512312578e-17}*cell[6] + V{5.55111512312578e-17}*cell[7] + V{1.11022302462516e-16}*cell[9] + x104 + x107 + x108);
auto x110 = x34*(V{5.55111512312578e-17}*cell[13] + V{5.55111512312578e-17}*cell[14] + V{1.11022302462516e-16}*cell[16] + V{1.11022302462516e-16}*cell[18] + V{5.55111512312578e-17}*cell[4] + V{5.55111512312578e-17}*cell[5] + x102 + x105 + x108 + x51 + V{5.55111512312578e-17});
auto x111 = x19 + x21;
auto x112 = V{4.5}*(x111*x111);
auto x113 = -x112 + x72 + x83;
auto x114 = x101 + x106 + x109 + x110 + x113*x80 + x50 + x99 + V{-2.22044604925031e-16};
auto x115 = V{3}*x44;
auto x116 = -x115 + x48 + x53;
auto x117 = x116*x80;
auto x118 = x115 + x61 + x65;
auto x119 = -x118*x80;
auto x120 = x19 + x20;
auto x121 = V{4.5}*(x120*x120);
auto x122 = -x121 + x57 + x83;
auto x123 = V{3.33066907387547e-16}*cell[14] + V{3.33066907387547e-16}*cell[5] + x117 + x119 + x122*x80;
auto x124 = x113*x52;
auto x125 = x112 + x62 + x65 + x83;
auto x126 = -x125*x52;
auto x127 = -x83;
auto x128 = -V{4.5}*x87*x87;
auto x129 = x127 + x128 + x72;
auto x130 = x129*x52;
auto x131 = -V{4.5}*x81*x81;
auto x132 = x127 + x131 + x57;
auto x133 = x80*x94;
auto x134 = x64 + x83;
auto x135 = x134 + x60 + x92 + V{1};
auto x136 = -x135*x80;
auto x137 = V{1.66533453693773e-16}*cell[10] + V{2.22044604925031e-16}*cell[18] + V{1.66533453693773e-16}*cell[1] + V{2.22044604925031e-16}*cell[9] + x133 + x136 + x42*x75 + x58*x80;
auto x138 = x122*x52;
auto x139 = x121 + x134 + x63;
auto x140 = -x139*x52;
auto x141 = x132*x52;
auto x142 = x24*(V{2.22044604925031e-16}*cell[10] + V{1.66533453693773e-16}*cell[11] + V{1.11022302462516e-16}*cell[12] + V{3.33066907387547e-16}*cell[13] + V{4.44089209850063e-16}*cell[15] + V{2.22044604925031e-16}*cell[16] + V{4.71844785465692e-16}*cell[17] + V{5.27355936696949e-16}*cell[18] + V{2.22044604925031e-16}*cell[1] + V{1.66533453693773e-16}*cell[2] + V{3.33066907387547e-16}*cell[4] + V{4.44089209850063e-16}*cell[6] + V{2.22044604925031e-16}*cell[7] + V{4.71844785465692e-16}*cell[8] + V{5.27355936696949e-16}*cell[9] + x114 + x123 + x42*x96 + x43*x75 + x44*x95 + x51 + x52*x79 + x59 + x67 + x74 + x80*x86 + x80*x90 + x91*x94) + x32*(V{2.22044604925031e-16}*cell[11] + V{9.71445146547012e-17}*cell[12] + V{1.11022302462516e-16}*cell[13] + V{4.71844785465692e-16}*cell[15] + V{5.27355936696949e-16}*cell[16] + V{2.22044604925031e-16}*cell[17] + V{2.22044604925031e-16}*cell[2] + V{9.71445146547012e-17}*cell[3] + V{4.71844785465692e-16}*cell[6] + V{5.27355936696949e-16}*cell[7] + V{2.22044604925031e-16}*cell[8] + x103 + x106 + x109 + x110 + x123 + x124 + x126 + x130 + x132*x80 + x137 + x43*x96 + x44*(V{3.23815048849004e-17}*x24*x37 + V{3.23815048849004e-17}*x32*x39 + V{3.23815048849004e-17}*x34*x40) + x50 + x52*x90 + x79*x80 + x91*x98 + V{-2.22044604925031e-16}) + x34*(V{1.11022302462516e-16}*cell[11] + V{2.22044604925031e-16}*cell[12] + V{4.71844785465692e-16}*cell[13] + V{5.27355936696949e-16}*cell[14] + V{3.33066907387547e-16}*cell[15] + V{3.33066907387547e-16}*cell[16] + V{2.22044604925031e-16}*cell[3] + V{4.71844785465692e-16}*cell[4] + V{5.27355936696949e-16}*cell[5] + V{3.33066907387547e-16}*cell[6] + V{3.33066907387547e-16}*cell[7] + x107 + x114 + x116*x91 + x129*x80 + x137 + x138 + x140 + x141 + x43*x95 + x44*x96 + x52*x86 + x73*x80);
auto x143 = V{0.0555555555555556}*x24*x37 + V{0.0555555555555556}*x32*x39 + V{0.0555555555555556}*x34*x40;
auto x144 = V{3.46944695195361e-18}*cell[0];
auto x145 = V{3.46944695195361e-18}*cell[12] + V{3.46944695195361e-18}*cell[3] + V{6.93889390390723e-18}*cell[4] + x144 + V{3.46944695195361e-18};
auto x146 = V{3.46944695195361e-18}*cell[11] + V{3.46944695195361e-18}*cell[2] + V{6.93889390390723e-18}*cell[6];
auto x147 = x24*(V{3.46944695195361e-18}*cell[17] + V{3.46944695195361e-18}*cell[18] + V{6.93889390390723e-18}*cell[1] + V{6.93889390390723e-18}*cell[5] + V{6.93889390390723e-18}*cell[7] + V{3.46944695195361e-18}*cell[8] + V{3.46944695195361e-18}*cell[9] + x145 + x146);
auto x148 = V{3.46944695195361e-18}*cell[10] + V{3.46944695195361e-18}*cell[1] + V{6.93889390390723e-18}*cell[8];
auto x149 = x32*(V{6.93889390390723e-18}*cell[14] + V{3.46944695195361e-18}*cell[15] + V{3.46944695195361e-18}*cell[16] + V{6.93889390390723e-18}*cell[2] + V{3.46944695195361e-18}*cell[6] + V{3.46944695195361e-18}*cell[7] + V{6.93889390390723e-18}*cell[9] + x145 + x148);
auto x150 = x34*(V{3.46944695195361e-18}*cell[13] + V{3.46944695195361e-18}*cell[14] + V{6.93889390390723e-18}*cell[16] + V{6.93889390390723e-18}*cell[18] + V{6.93889390390723e-18}*cell[3] + V{3.46944695195361e-18}*cell[4] + V{3.46944695195361e-18}*cell[5] + x144 + x146 + x148 + V{3.46944695195361e-18});
auto x151 = V{0.0277777777777778}*x24*x37 + V{0.0277777777777778}*x32*x39 + V{0.0277777777777778}*x34*x40;
auto x152 = -V{0.0833333333333333}*cell[12] + V{0.0833333333333334}*cell[13] + V{0.0833333333333334}*cell[14] - V{0.0833333333333333}*cell[3] + V{0.0833333333333334}*cell[4] + V{0.0833333333333334}*cell[5] + x147 + x149 + x150 - x151*x44 + V{-0.0555555555555555};
auto x153 = -V{0.0833333333333333}*cell[11] + V{0.0833333333333334}*cell[15] + V{0.0833333333333334}*cell[16] - V{0.0833333333333333}*cell[2] + V{0.0833333333333334}*cell[6] + V{0.0833333333333334}*cell[7] - x151*x43;
auto x154 = V{0.166666666666667}*cell[10] + V{0.166666666666667}*cell[1] + x143*x42 + x152 + x153 - x25 - x26 - x27 - x28;
auto x155 = x24*x37 + x32*x39 + x34*x40;
auto x156 = -V{0.0833333333333333}*cell[10] + V{0.0833333333333334}*cell[17] + V{0.0833333333333334}*cell[18] - V{0.0833333333333333}*cell[1] + V{0.0833333333333334}*cell[8] + V{0.0833333333333334}*cell[9] - V{0.0277777777777778}*x155*x42;
auto x157 = V{0.166666666666667}*cell[11] - V{0.166666666666667}*cell[15] - V{0.166666666666667}*cell[16] + V{0.166666666666667}*cell[2] - V{0.166666666666667}*cell[6] - V{0.166666666666667}*cell[7] + x143*x43 + x152 + x156;
auto x158 = V{0.166666666666667}*cell[12] - V{0.166666666666667}*cell[13] - V{0.166666666666667}*cell[14] + V{0.166666666666667}*cell[3] - V{0.166666666666667}*cell[4] - V{0.166666666666667}*cell[5] + x143*x44 + x147 + x149 + x150 + x153 + x156 + V{-0.0555555555555555};
auto x159 = V{0.0833333333333333}*x155*x19;
auto x160 = x159*x20;
auto x161 = V{0.0138888888888889}*x24*x37 + V{0.0138888888888889}*x32*x39 + V{0.0138888888888889}*x34*x40;
auto x162 = V{0.0138888888888889}*cell[0];
auto x163 = V{0.0138888888888889}*cell[12] + V{0.0138888888888889}*cell[3] + V{0.0277777777777778}*cell[4] + x162 + V{0.0138888888888889};
auto x164 = V{0.0138888888888889}*cell[11] + V{0.0138888888888889}*cell[2] + V{0.0277777777777778}*cell[6];
auto x165 = x24*(V{0.0138888888888889}*cell[17] + V{0.0138888888888889}*cell[18] + V{0.0277777777777778}*cell[1] + V{0.0277777777777778}*cell[5] + V{0.0277777777777778}*cell[7] + V{0.0138888888888889}*cell[8] + V{0.0138888888888889}*cell[9] + x163 + x164);
auto x166 = V{0.0138888888888889}*cell[10] + V{0.0138888888888889}*cell[1] + V{0.0277777777777778}*cell[8];
auto x167 = x32*(V{0.0277777777777778}*cell[14] + V{0.0138888888888889}*cell[15] + V{0.0138888888888889}*cell[16] + V{0.0277777777777778}*cell[2] + V{0.0138888888888889}*cell[6] + V{0.0138888888888889}*cell[7] + V{0.0277777777777778}*cell[9] + x163 + x166);
auto x168 = x34*(V{0.0138888888888889}*cell[13] + V{0.0138888888888889}*cell[14] + V{0.0277777777777778}*cell[16] + V{0.0277777777777778}*cell[18] + V{0.0277777777777778}*cell[3] + V{0.0138888888888889}*cell[4] + V{0.0138888888888889}*cell[5] + x162 + x164 + x166 + V{0.0138888888888889});
auto x169 = V{0.0277777777777778}*x24*x37 + V{0.0277777777777778}*x32*x39 + V{0.0277777777777778}*x34*x40;
auto x170 = V{0.0833333333333333}*cell[10] + V{0.0416666666666667}*cell[17] + V{0.0416666666666667}*cell[18] + V{0.0833333333333333}*cell[1] + V{0.0416666666666667}*cell[8] + V{0.0416666666666667}*cell[9] + x165 + x167 + x168 + x169*x42 + V{0.0138888888888889};
auto x171 = V{0.0833333333333333}*cell[11] + V{0.0416666666666667}*cell[15] + V{0.0416666666666667}*cell[16] + V{0.0833333333333333}*cell[2] + V{0.0416666666666667}*cell[6] + V{0.0416666666666667}*cell[7] + x169*x43;
auto x172 = -V{0.0416666666666667}*cell[12] - V{0.0416666666666667}*cell[3] - x161*x44 + x170 + x171;
auto x173 = V{0.416666666666667}*cell[13] - V{0.0833333333333333}*cell[14] + V{0.416666666666667}*cell[4] - V{0.0833333333333333}*cell[5] + x160 + x172;
auto x174 = -V{0.0833333333333333}*cell[13] + V{0.416666666666667}*cell[14] - V{0.0833333333333333}*cell[4] + V{0.416666666666667}*cell[5] - x160 + x172;
auto x175 = x159*x21;
auto x176 = V{0.0833333333333333}*cell[12] + V{0.0416666666666667}*cell[13] + V{0.0416666666666667}*cell[14] + V{0.0833333333333333}*cell[3] + V{0.0416666666666667}*cell[4] + V{0.0416666666666667}*cell[5] + x169*x44;
auto x177 = -V{0.0416666666666667}*cell[11] - V{0.0416666666666667}*cell[2] - x161*x43 + x170 + x176;
auto x178 = V{0.416666666666667}*cell[15] - V{0.0833333333333333}*cell[16] + V{0.416666666666667}*cell[6] - V{0.0833333333333333}*cell[7] + x175 + x177;
auto x179 = -V{0.0833333333333333}*cell[15] + V{0.416666666666667}*cell[16] - V{0.0833333333333333}*cell[6] + V{0.416666666666667}*cell[7] - x175 + x177;
auto x180 = V{0.0833333333333333}*x155*x20*x21;
auto x181 = -V{0.0416666666666667}*cell[10] - V{0.0416666666666667}*cell[1] - x161*x42 + x165 + x167 + x168 + x171 + x176 + V{0.0138888888888889};
auto x182 = V{0.416666666666667}*cell[17] - V{0.0833333333333333}*cell[18] + V{0.416666666666667}*cell[8] - V{0.0833333333333333}*cell[9] + x180 + x181;
auto x183 = -V{0.0833333333333333}*cell[17] + V{0.416666666666667}*cell[18] - V{0.0833333333333333}*cell[8] + V{0.416666666666667}*cell[9] - x180 + x181;
auto x0 = -x22*(-V{0.111111111111111}*x142*x49 + V{0.333333333333333}) + x23*(V{0.5}*cell[10] + V{0.5}*cell[11] + V{0.5}*cell[12] + V{1}*cell[13] + V{1}*cell[14] + V{1}*cell[15] + V{1}*cell[16] + V{1}*cell[17] + V{1}*cell[18] + V{0.5}*cell[1] + V{0.5}*cell[2] + V{0.5}*cell[3] + V{1}*cell[4] + V{1}*cell[5] + V{1}*cell[6] + V{1}*cell[7] + V{1}*cell[8] + V{1}*cell[9] + x24*(V{0.333333333333333}*cell[1] + V{0.333333333333333}*cell[5] + V{0.333333333333333}*cell[7] + x25 + x26 + x27 + x28 + x30 + x31) + x32*(V{0.333333333333333}*cell[14] + V{0.166666666666667}*cell[15] + V{0.166666666666667}*cell[16] + V{0.333333333333333}*cell[2] + V{0.166666666666667}*cell[6] + V{0.166666666666667}*cell[7] + V{0.333333333333333}*cell[9] + x30 + x33) + x34*(V{0.166666666666667}*cell[13] + V{0.166666666666667}*cell[14] + V{0.333333333333333}*cell[16] + V{0.333333333333333}*cell[18] + V{0.333333333333333}*cell[3] + V{0.166666666666667}*cell[4] + V{0.166666666666667}*cell[5] + x29 + x31 + x33 + V{0.166666666666667}) + x41*x42 + x41*x43 + x41*x44 - x50 + V{0.833333333333333});
auto x1 = -x22*(-V{0.0185185185185185}*x142*x94 + V{0.0555555555555556}) - x23*(x133 + x154);
auto x2 = -x22*(-V{0.0185185185185185}*x142*x98 + V{0.0555555555555556}) + x23*(-x157 - x99);
auto x3 = -x22*(-V{0.0185185185185185}*x116*x142 + V{0.0555555555555556}) + x23*(-x117 - x158);
auto x4 = -x22*(-V{0.00925925925925926}*x122*x142 + V{0.0277777777777778}) - x23*(x138 + x173);
auto x5 = -x22*(-V{0.00925925925925926}*x142*x86 + V{0.0277777777777778}) - x23*(x174 + x52*(x131 + x85));
auto x6 = -x22*(-V{0.00925925925925926}*x113*x142 + V{0.0277777777777778}) - x23*(x124 + x178);
auto x7 = -x22*(-V{0.00925925925925926}*x142*x90 + V{0.0277777777777778}) - x23*(x179 + x52*(x128 + x89));
auto x8 = -x22*(-V{0.00925925925925926}*x142*x58 + V{0.0277777777777778}) - x23*(x182 + x59);
auto x9 = -x22*(-V{0.00925925925925926}*x142*x79 + V{0.0277777777777778}) - x23*(x183 + x52*(x71 + x78));
auto x10 = -x22*(V{0.0185185185185185}*x135*x142 + V{0.0555555555555556}) - x23*(x136 + x154);
auto x11 = -x22*(V{0.0185185185185185}*x100*x142 + V{0.0555555555555556}) + x23*(-x101 - x157);
auto x12 = -x22*(V{0.0185185185185185}*x118*x142 + V{0.0555555555555556}) + x23*(-x119 - x158);
auto x13 = -x22*(V{0.00925925925925926}*x139*x142 + V{0.0277777777777778}) - x23*(x140 + x173);
auto x14 = -x22*(-V{0.00925925925925926}*x132*x142 + V{0.0277777777777778}) - x23*(x141 + x174);
auto x15 = -x22*(V{0.00925925925925926}*x125*x142 + V{0.0277777777777778}) - x23*(x126 + x178);
auto x16 = -x22*(-V{0.00925925925925926}*x129*x142 + V{0.0277777777777778}) - x23*(x130 + x179);
auto x17 = -x22*(V{0.00925925925925926}*x142*x66 + V{0.0277777777777778}) - x23*(x182 + x67);
auto x18 = -x22*(-V{0.00925925925925926}*x142*x73 + V{0.0277777777777778}) - x23*(x183 + x74);
cell[0] = x0;
cell[1] = x1;
cell[2] = x2;
cell[3] = x3;
cell[4] = x4;
cell[5] = x5;
cell[6] = x6;
cell[7] = x7;
cell[8] = x8;
cell[9] = x9;
cell[10] = x10;
cell[11] = x11;
cell[12] = x12;
cell[13] = x13;
cell[14] = x14;
cell[15] = x15;
cell[16] = x16;
cell[17] = x17;
cell[18] = x18;
return { -V{0.333333333333333}*x142, x42 + x43 + x44 };
}
};

}

}

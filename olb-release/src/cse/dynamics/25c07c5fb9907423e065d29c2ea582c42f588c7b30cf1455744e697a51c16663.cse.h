/*  This file is part of the OpenLB library
 *
 *  Copyright (C) 2021-24 Adrian Kummerlaender, Shota Ito
 *  E-mail contact: info@openlb.net
 *  The most recent release of OpenLB can be downloaded at
 *  <http://www.openlb.net/>
 *
 *  This program is free software; you can redistribute it and/or
 *  modify it under the terms of the GNU General Public License
 *  as published by the Free Software Foundation; either version 2
 *  of the License, or (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public
 *  License along with this program; if not, write to the Free
 *  Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
 *  Boston, MA  02110-1301, USA.
*/

/*  ========================================================
 *  ==  WARNING: This is an automatically generated file, ==
 *  ==                  do not modify.                    ==
 *  ========================================================
 */

#pragma once


namespace olb {

namespace dynamics {

template <typename T, typename... FIELDS>
struct CSE<CombinedRLBdynamics<T, descriptors::D3Q19<FIELDS...>, dynamics::Tuple<T, descriptors::D3Q19<FIELDS...>, momenta::Tuple<momenta::BulkDensity, momenta::BulkMomentum, momenta::BulkStress, momenta::DefineToNEq>, equilibria::SecondOrder, collision::BGK, dynamics::DefaultCombination>, momenta::Tuple<momenta::InnerEdgeDensity3D<0, 1, -1>, momenta::FixedVelocityMomentumGeneric, momenta::InnerEdgeStress3D<0, 1, -1>, momenta::DefineSeparately> >> {
template <concepts::Cell CELL, concepts::Parameters PARAMETERS, concepts::BaseType V=typename CELL::value_t>
CellStatistic<V> collide(CELL& cell, PARAMETERS& parameters) any_platform {
auto x21 = cell.template getFieldComponent<momenta::FixedVelocityMomentumGeneric::VELOCITY>(2);
auto x19 = cell.template getFieldComponent<momenta::FixedVelocityMomentumGeneric::VELOCITY>(0);
auto x22 = parameters.template get<descriptors::OMEGA>();
auto x20 = cell.template getFieldComponent<momenta::FixedVelocityMomentumGeneric::VELOCITY>(1);
auto x23 = x22 + V{-1};
auto x24 = V{0.5}*cell[11];
auto x25 = V{0.5}*cell[3];
auto x26 = V{2}*cell[18];
auto x27 = V{1} / (x21 + V{-1});
auto x28 = V{0.25}*cell[0] + V{0.25}*cell[10] + V{0.5}*cell[18] + V{0.25}*cell[1] + V{0.25};
auto x29 = V{1} / (x20 + V{1});
auto x30 = cell[0] + cell[10] + cell[1] + x26 + V{1};
auto x31 = V{2}*cell[11] + cell[12] + V{2}*cell[13] + cell[15] + cell[16] + V{2}*cell[17] + cell[3] + V{2}*cell[5] + cell[6] + cell[7] + x30;
auto x32 = cell[11] + cell[13] + cell[14] + V{2}*cell[16] + cell[2] + V{2}*cell[3] + cell[4] + cell[5] + V{2}*cell[6] + V{2}*cell[8] + x30;
auto x33 = -V{0.0138888888888889}*x27*x32 + V{0.0138888888888889}*x29*x31;
auto x34 = V{3}*x20;
auto x35 = -x34;
auto x36 = -x21;
auto x37 = x20 + x36;
auto x38 = -V{4.5}*x37*x37;
auto x39 = V{3}*x21;
auto x40 = x21*x21;
auto x41 = V{1.5}*x40;
auto x42 = x19*x19;
auto x43 = V{1.5}*x42;
auto x44 = x20*x20;
auto x45 = V{1.5}*x44;
auto x46 = x43 + x45 + V{-1};
auto x47 = x41 + x46;
auto x48 = x39 + x47;
auto x49 = x35 + x38 + x48;
auto x50 = x47*(-V{0.166666666666667}*x27*x32 + V{0.166666666666667}*x29*x31);
auto x51 = -V{0.25}*x27*x32 + V{0.25}*x29*x31;
auto x52 = -x37;
auto x53 = -x39 + x47;
auto x54 = x34 + x53;
auto x55 = x54 - V{4.5}*x52*x52;
auto x56 = V{1.11022302462516e-16}*cell[3];
auto x57 = -V{0.0277777777777778}*x27*x32 + V{0.0277777777777778}*x29*x31;
auto x58 = V{3}*x40;
auto x59 = V{1} - x45;
auto x60 = -x43;
auto x61 = x39 + x60;
auto x62 = x58 + x59 + x61;
auto x63 = x57*x62;
auto x64 = x19 + x21;
auto x65 = V{4.5}*(x64*x64);
auto x66 = V{3}*x19;
auto x67 = -x41;
auto x68 = x59 + x67;
auto x69 = x66 + x68;
auto x70 = x61 + x65 + x69;
auto x71 = x19 + x20;
auto x72 = V{4.5}*(x71*x71);
auto x73 = x34 + x60;
auto x74 = x69 + x72 + x73;
auto x75 = x20 + x21;
auto x76 = V{4.5}*(x75*x75);
auto x77 = x34 + x61 + x68 + x76;
auto x78 = -V{0.0555555555555556}*x27*x32 + V{0.0555555555555556}*x29*x31;
auto x79 = V{3}*x44;
auto x80 = x67 + x73 + x79 + V{1};
auto x81 = -V{5.55111512312578e-17}*x27*x32 + V{5.55111512312578e-17}*x29*x31;
auto x82 = -V{1.11022302462516e-16}*x27*x32 + V{1.11022302462516e-16}*x29*x31;
auto x83 = x48 - x65 + x66;
auto x84 = x19 + x36;
auto x85 = -x84;
auto x86 = x53 + x66;
auto x87 = x86 - V{4.5}*x85*x85;
auto x88 = -x66;
auto x89 = -V{4.5}*x84*x84;
auto x90 = x48 + x88 + x89;
auto x91 = x39 + x46 - x58;
auto x92 = x57*x91;
auto x93 = x19 - x20;
auto x94 = -x93;
auto x95 = x47 + x66;
auto x96 = x35 + x95;
auto x97 = x96 - V{4.5}*x94*x94;
auto x98 = V{5.55111512312578e-17}*cell[0] + V{5.55111512312578e-17}*cell[10] + V{1.11022302462516e-16}*cell[18] + V{5.55111512312578e-17}*cell[1] + V{5.55111512312578e-17};
auto x99 = V{1.11022302462516e-16}*cell[11];
auto x100 = V{3}*x42;
auto x101 = x100 + x69;
auto x102 = x41 + V{-1};
auto x103 = -x100 + x102 + x45 + x66;
auto x104 = V{1.66533453693773e-16}*cell[10] + V{4.44089209850063e-16}*cell[18] + V{1.66533453693773e-16}*cell[1] + x101*x57 - x103*x57 + x27*(V{5.55111512312578e-17}*cell[11] + V{5.55111512312578e-17}*cell[13] + V{5.55111512312578e-17}*cell[14] + V{1.11022302462516e-16}*cell[16] + V{5.55111512312578e-17}*cell[2] + V{5.55111512312578e-17}*cell[4] + V{5.55111512312578e-17}*cell[5] + V{1.11022302462516e-16}*cell[6] + V{1.11022302462516e-16}*cell[8] + x56 + x98) - x29*(V{5.55111512312578e-17}*cell[12] + V{1.11022302462516e-16}*cell[13] + V{5.55111512312578e-17}*cell[15] + V{5.55111512312578e-17}*cell[16] + V{1.11022302462516e-16}*cell[17] + V{5.55111512312578e-17}*cell[3] + V{1.11022302462516e-16}*cell[5] + V{5.55111512312578e-17}*cell[6] + V{5.55111512312578e-17}*cell[7] + x98 + x99) - x42*(-V{8.32667268468867e-17}*x27*x32 + V{8.32667268468867e-17}*x29*x31) - x49*(-V{0.0277777777777778}*x27*x32 + V{0.0277777777777778}*x29*x31) - x50 - x55*(-V{3.08395284618099e-18}*x27*x32 + V{3.08395284618099e-18}*x29*x31) + V{-2.22044604925031e-16};
auto x105 = x29*(V{2.22044604925031e-16}*cell[11] + V{1.11022302462516e-16}*cell[12] + V{3.33066907387547e-16}*cell[13] + V{3.33066907387547e-16}*cell[14] + V{4.71844785465692e-16}*cell[15] + V{5.27355936696949e-16}*cell[16] + V{4.44089209850063e-16}*cell[17] + V{2.22044604925031e-16}*cell[2] + V{3.33066907387547e-16}*cell[4] + V{3.33066907387547e-16}*cell[5] + V{4.71844785465692e-16}*cell[6] + V{5.27355936696949e-16}*cell[7] + V{4.44089209850063e-16}*cell[8] + x104 + x33*x70 - x33*x83 - x33*x87 - x33*x90 - x40*x81 - x44*x82 + x56 + x57*x74 + x57*x77 - x57*x97 + x63 + x78*x80 - x92);
auto x106 = x57*x80;
auto x107 = x34 - x72 + x95;
auto x108 = -V{4.5}*x93*x93;
auto x109 = x108 + x34 + x47 + x88;
auto x110 = x102 + x34 + x43 - x79;
auto x111 = x110*x57;
auto x112 = x34 + x48 - x76;
auto x113 = x27*(V{2.22044604925031e-16}*cell[12] + V{4.71844785465692e-16}*cell[13] + V{5.27355936696949e-16}*cell[14] + V{3.33066907387547e-16}*cell[15] + V{3.33066907387547e-16}*cell[16] + V{1.11022302462516e-16}*cell[2] + V{2.22044604925031e-16}*cell[3] + V{4.71844785465692e-16}*cell[4] + V{5.27355936696949e-16}*cell[5] + V{3.33066907387547e-16}*cell[6] + V{3.33066907387547e-16}*cell[7] + x104 + x106 - x107*x33 - x109*x33 - x111 - x112*x57 + x33*x74 - x33*x97 - x40*x82 - x44*x81 - x57*x83 - x57*x90 - x78*x91 + x99);
auto x114 = x105 - x113;
auto x115 = V{0.0277777777777778}*x27*x32 - V{0.0277777777777778}*x29*x31;
auto x116 = V{0.00231481481481481}*x27*x32 - V{0.00231481481481481}*x29*x31;
auto x117 = x38 + x54;
auto x118 = V{0.0416666666666667}*x27*x32 - V{0.0416666666666667}*x29*x31;
auto x119 = V{0.0833333333333334}*cell[13];
auto x120 = V{0.0833333333333334}*cell[14];
auto x121 = V{0.0833333333333334}*cell[4];
auto x122 = V{0.0833333333333334}*cell[5];
auto x123 = V{0.0833333333333333}*cell[12];
auto x124 = V{0.0833333333333333}*cell[3];
auto x125 = V{3.46944695195361e-18}*cell[0] + V{3.46944695195361e-18}*cell[10] + V{6.93889390390723e-18}*cell[18] + V{3.46944695195361e-18}*cell[1] + V{3.46944695195361e-18};
auto x126 = x27*(V{3.46944695195361e-18}*cell[11] + V{3.46944695195361e-18}*cell[13] + V{3.46944695195361e-18}*cell[14] + V{6.93889390390723e-18}*cell[16] + V{3.46944695195361e-18}*cell[2] + V{6.93889390390723e-18}*cell[3] + V{3.46944695195361e-18}*cell[4] + V{3.46944695195361e-18}*cell[5] + V{6.93889390390723e-18}*cell[6] + V{6.93889390390723e-18}*cell[8] + x125);
auto x127 = x29*(V{6.93889390390723e-18}*cell[11] + V{3.46944695195361e-18}*cell[12] + V{6.93889390390723e-18}*cell[13] + V{3.46944695195361e-18}*cell[15] + V{3.46944695195361e-18}*cell[16] + V{6.93889390390723e-18}*cell[17] + V{3.46944695195361e-18}*cell[3] + V{6.93889390390723e-18}*cell[5] + V{3.46944695195361e-18}*cell[6] + V{3.46944695195361e-18}*cell[7] + x125);
auto x128 = -x127;
auto x129 = x119 + x120 + x121 + x122 - x123 - x124 + x126 + x128 + V{-0.0555555555555555};
auto x130 = V{0.0833333333333334}*cell[15];
auto x131 = V{0.0833333333333334}*cell[16];
auto x132 = V{0.0833333333333334}*cell[6];
auto x133 = V{0.0833333333333334}*cell[7];
auto x134 = V{0.0833333333333333}*cell[11];
auto x135 = V{0.0833333333333333}*cell[2];
auto x136 = x130 + x131 + x132 + x133 - x134 - x135;
auto x137 = V{0.166666666666667}*cell[10] - V{0.166666666666667}*cell[17] - V{0.333333333333333}*cell[18] + V{0.166666666666667}*cell[1] - V{0.166666666666667}*cell[8] - x116*x117 + x116*x49 - x118*x40 - x118*x44 + x129 + x136 + x42*(V{0.0833333333333333}*x27*x32 - V{0.0833333333333333}*x29*x31);
auto x138 = V{0.166666666666667}*cell[11];
auto x139 = V{0.166666666666667}*cell[2];
auto x140 = -V{0.0833333333333333}*x27*x32 + V{0.0833333333333333}*x29*x31;
auto x141 = -V{0.0416666666666667}*x27*x32 + V{0.0416666666666667}*x29*x31;
auto x142 = x141*x40;
auto x143 = V{0.0833333333333334}*cell[17];
auto x144 = V{0.0833333333333334}*cell[8];
auto x145 = V{0.166666666666667}*cell[18];
auto x146 = -V{0.00115740740740741}*x27*x32 + V{0.00115740740740741}*x29*x31;
auto x147 = x146*x49;
auto x148 = x141*x42;
auto x149 = V{0.0833333333333333}*cell[10] + V{0.0833333333333333}*cell[1] - x126 + x127 - x143 - x144 - x145 + x146*x55 - x147 - x148 + V{0.0555555555555555};
auto x150 = V{0.166666666666667}*cell[12];
auto x151 = V{0.166666666666667}*cell[3];
auto x152 = x141*x44;
auto x153 = V{0.0138888888888889}*x27*x32 - V{0.0138888888888889}*x29*x31;
auto x154 = x27*x32 - x29*x31;
auto x155 = V{0.125}*x154*x19;
auto x156 = x155*x20;
auto x157 = V{0.0208333333333333}*x27*x32 - V{0.0208333333333333}*x29*x31;
auto x158 = V{0.0208333333333333}*cell[0] + V{0.0208333333333333}*cell[10] + V{0.0416666666666667}*cell[18] + V{0.0208333333333333}*cell[1] + V{0.0208333333333333};
auto x159 = x27*(V{0.0208333333333333}*cell[11] + V{0.0208333333333333}*cell[13] + V{0.0208333333333333}*cell[14] + V{0.0416666666666667}*cell[16] + V{0.0208333333333333}*cell[2] + V{0.0416666666666667}*cell[3] + V{0.0208333333333333}*cell[4] + V{0.0208333333333333}*cell[5] + V{0.0416666666666667}*cell[6] + V{0.0416666666666667}*cell[8] + x158);
auto x160 = -x29*(V{0.0416666666666667}*cell[11] + V{0.0208333333333333}*cell[12] + V{0.0416666666666667}*cell[13] + V{0.0208333333333333}*cell[15] + V{0.0208333333333333}*cell[16] + V{0.0416666666666667}*cell[17] + V{0.0208333333333333}*cell[3] + V{0.0416666666666667}*cell[5] + V{0.0208333333333333}*cell[6] + V{0.0208333333333333}*cell[7] + x158);
auto x161 = V{0.0416666666666667}*x27*x32 - V{0.0416666666666667}*x29*x31;
auto x162 = V{0.0833333333333333}*cell[11] + V{0.0416666666666667}*cell[15] + V{0.0416666666666667}*cell[16] + V{0.0833333333333333}*cell[2] + V{0.0416666666666667}*cell[6] + V{0.0416666666666667}*cell[7] + x159 + x160 + x161*x44 + V{0.0138888888888889};
auto x163 = V{0.000578703703703704}*x27*x32 - V{0.000578703703703704}*x29*x31;
auto x164 = V{0.0833333333333333}*cell[10] + V{0.0416666666666667}*cell[17] + V{0.0833333333333334}*cell[18] + V{0.0833333333333333}*cell[1] + V{0.0416666666666667}*cell[8] + x117*x163 + x161*x42 - x163*x49;
auto x165 = -V{0.0416666666666667}*cell[12] - V{0.0416666666666667}*cell[3] - x157*x40 + x162 + x164;
auto x166 = V{0.416666666666667}*cell[13] - V{0.0833333333333333}*cell[14] + V{0.416666666666667}*cell[4] - V{0.0833333333333333}*cell[5] + x156 + x165;
auto x167 = -V{0.0833333333333333}*cell[13] + V{0.416666666666667}*cell[14] - V{0.0833333333333333}*cell[4] + V{0.416666666666667}*cell[5] - x156 + x165;
auto x168 = x155*x21;
auto x169 = V{0.0833333333333333}*cell[12] + V{0.0416666666666667}*cell[13] + V{0.0416666666666667}*cell[14] + V{0.0833333333333333}*cell[3] + V{0.0416666666666667}*cell[4] + V{0.0416666666666667}*cell[5] + x161*x40;
auto x170 = -V{0.0416666666666667}*cell[11] - V{0.0416666666666667}*cell[2] - x157*x44 + x159 + x160 + x164 + x169 + V{0.0138888888888889};
auto x171 = V{0.416666666666667}*cell[15] - V{0.0833333333333333}*cell[16] + V{0.416666666666667}*cell[6] - V{0.0833333333333333}*cell[7] + x168 + x170;
auto x172 = -V{0.0833333333333333}*cell[15] + V{0.416666666666667}*cell[16] - V{0.0833333333333333}*cell[6] + V{0.416666666666667}*cell[7] - x168 + x170;
auto x173 = V{0.00115740740740741}*x27*x32 - V{0.00115740740740741}*x29*x31;
auto x174 = V{0.125}*x154*x20*x21;
auto x175 = -V{0.0416666666666667}*cell[10] - V{0.0416666666666667}*cell[1] - x157*x42 + x162 + x169;
auto x176 = V{0.416666666666667}*cell[17] - V{0.166666666666667}*cell[18] + V{0.416666666666667}*cell[8] - x117*x173 + x173*x49 + x174 + x175;
auto x177 = V{0.00578703703703704}*x27*x32 - V{0.00578703703703704}*x29*x31;
auto x178 = -V{0.0833333333333333}*cell[17] + V{0.833333333333333}*cell[18] - V{0.0833333333333333}*cell[8] - x174 + x175;
auto x179 = -x105 + x113;
auto x180 = -x154;
auto x181 = -V{0.0833333333333333}*cell[10] - V{0.0833333333333333}*cell[1] + x143 + x144 + x145 + x147 + x148 - V{0.00115740740740741}*x180*x55;
auto x0 = -x22*(V{0.166666666666667}*x114*x47 + V{0.333333333333333}) + x23*(V{0.5}*cell[10] + V{0.5}*cell[12] + V{1}*cell[13] + V{1}*cell[14] + V{1}*cell[15] + V{1}*cell[16] + V{1}*cell[17] + V{0.5}*cell[1] + V{0.5}*cell[2] + V{1}*cell[4] + V{1}*cell[5] + V{1}*cell[6] + V{1}*cell[7] + V{1}*cell[8] + x24 + x25 + x26 + x27*(V{0.25}*cell[11] + V{0.25}*cell[13] + V{0.25}*cell[14] + V{0.5}*cell[16] + V{0.25}*cell[2] + V{0.25}*cell[4] + V{0.25}*cell[5] + V{0.5}*cell[6] + V{0.5}*cell[8] + x25 + x28) - x29*(V{0.25}*cell[12] + V{0.5}*cell[13] + V{0.25}*cell[15] + V{0.25}*cell[16] + V{0.5}*cell[17] + V{0.25}*cell[3] + V{0.5}*cell[5] + V{0.25}*cell[6] + V{0.25}*cell[7] + x24 + x28) + x33*x49 - x33*x55 - x40*x51 - x42*x51 - x44*x51 + x50 + V{0.833333333333333});
auto x1 = -x22*(V{0.0277777777777778}*x103*x114 + V{0.0555555555555556}) - x23*(x103*x115 + x137);
auto x2 = -x22*(V{0.0277777777777778}*x110*x114 + V{0.0555555555555556}) + x23*(V{0.166666666666667}*cell[15] + V{0.166666666666667}*cell[16] + V{0.166666666666667}*cell[6] + V{0.166666666666667}*cell[7] + x111 - x119 - x120 - x121 - x122 + x123 + x124 - x138 - x139 + x140*x44 - x142 + x149);
auto x3 = -x22*(V{0.0277777777777778}*x114*x91 + V{0.0555555555555556}) + x23*(V{0.166666666666667}*cell[13] + V{0.166666666666667}*cell[14] + V{0.166666666666667}*cell[4] + V{0.166666666666667}*cell[5] - x130 - x131 - x132 - x133 + x134 + x135 + x140*x40 + x149 - x150 - x151 - x152 + x92);
auto x4 = -x22*(V{0.0138888888888889}*x107*x114 + V{0.0277777777777778}) - x23*(x107*x153 + x166);
auto x5 = -x22*(V{0.0138888888888889}*x114*x97 + V{0.0277777777777778}) - x23*(x153*(x108 + x96) + x167);
auto x6 = -x22*(V{0.0138888888888889}*x114*x83 + V{0.0277777777777778}) - x23*(x153*x83 + x171);
auto x7 = -x22*(V{0.0138888888888889}*x114*x87 + V{0.0277777777777778}) - x23*(x153*(x86 + x89) + x172);
auto x8 = -x22*(V{0.0138888888888889}*x112*x114 + V{0.0277777777777778}) - x23*(x112*x153 + x176);
auto x9 = -x22*(V{0.0138888888888889}*x114*x55 + V{0.0277777777777778}) - x23*(x117*(V{0.0196759259259259}*x27*x32 - V{0.0196759259259259}*x29*x31) - x177*x49 + x178);
auto x10 = -x22*(V{0.0277777777777778}*x101*x179 + V{0.0555555555555556}) - x23*(-x101*x115 + x137);
auto x11 = -x22*(V{0.0277777777777778}*x179*x80 + V{0.0555555555555556}) + x23*(V{0.166666666666667}*cell[15] + V{0.166666666666667}*cell[16] + V{0.166666666666667}*cell[6] + V{0.166666666666667}*cell[7] - x106 - x129 - x138 - x139 - x142 + V{0.0833333333333333}*x180*x44 - x181);
auto x12 = -x22*(V{0.0277777777777778}*x179*x62 + V{0.0555555555555556}) + x23*(V{0.166666666666667}*cell[13] + V{0.166666666666667}*cell[14] + V{0.166666666666667}*cell[4] + V{0.166666666666667}*cell[5] - x126 - x128 - x136 - x150 - x151 - x152 + V{0.0833333333333333}*x180*x40 - x181 - x63 + V{0.0555555555555555});
auto x13 = -x22*(V{0.0138888888888889}*x179*x74 + V{0.0277777777777778}) - x23*(-x153*x74 + x166);
auto x14 = -x22*(V{0.0138888888888889}*x109*x114 + V{0.0277777777777778}) - x23*(x109*x153 + x167);
auto x15 = -x22*(V{0.0138888888888889}*x179*x70 + V{0.0277777777777778}) - x23*(-x153*x70 + x171);
auto x16 = -x22*(V{0.0138888888888889}*x114*x90 + V{0.0277777777777778}) - x23*(x153*x90 + x172);
auto x17 = -x22*(V{0.0138888888888889}*x179*x77 + V{0.0277777777777778}) - x23*(-x153*x77 + x176);
auto x18 = -x22*(V{0.0138888888888889}*x114*x49 + V{0.0277777777777778}) - x23*(x117*x177 + x178 + x49*(V{0.00810185185185185}*x27*x32 - V{0.00810185185185185}*x29*x31));
cell[0] = x0;
cell[1] = x1;
cell[2] = x2;
cell[3] = x3;
cell[4] = x4;
cell[5] = x5;
cell[6] = x6;
cell[7] = x7;
cell[8] = x8;
cell[9] = x9;
cell[10] = x10;
cell[11] = x11;
cell[12] = x12;
cell[13] = x13;
cell[14] = x14;
cell[15] = x15;
cell[16] = x16;
cell[17] = x17;
cell[18] = x18;
return { V{0.5}*x114, x40 + x42 + x44 };
}
};

}

}
